@model FilmOverflow.WebUI.ViewModels.FilmViewModel

<div id="filmModalContent">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="filmModalLabel">Create advert</h4>
            </div>

            @using (Html.BeginForm("Create", "Film", new { @class = "form-horizontal", enctype = "multipart/form-data" }))
            {
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(m => m.Title, new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Description, new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Duration, new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.Duration, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Duration, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ImageEncodedBase64, new { @class = "col-md-2 control-label" })
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.ImageEncodedBase64, new { @class = "form-control", id = "fileData" })
                            <span id="test22">sdfsdf</span>
                            @Html.ValidationMessageFor(m => m.ImageEncodedBase64, "", new { @class = "text-danger" })                            
                            <input type = "file" id = "filePicker"/>


                            @*<span class="btn btn-success fileinput-button">
                                <i class="glyphicon glyphicon-plus"></i>
                                <span>Add files...</span>
                                @Html.TextBoxFor(m => m.Image, new { @class = "form-control", type = "file", id = "fileUpload" })
                                <input id="fileupload" type="file" name="files[]" multiple>
                            </span>
                            <br />
                            <div class="progress">
                                <div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;">
                                    <span class="sr-only">0% complete</span>
                                </div>
                            </div>*@
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button class="btn btn-default" type="button" data-dismiss="modal">Cancel</button>
                    <input class="btn btn-primary" type="submit" value="Create" />
                </div>
            }
        </div>
    </div>
</div>
