@model FilmOverflow.WebUI.ViewModels.FilmViewModel

@{
	ViewBag.Title = "Edit Film Form";
}

<aside>
	@Html.ActionLink(" ", "Index", "Film", null, new { @class = "fa fa-caret-left fa-4x back-nav", title = "Back to films" })
</aside>

<div class="container">
	<div class="row">
		<div class="col-md-12">
			<h1 class="well text-center">@ViewBag.Title</h1>
		</div>
		<div class="col-md-12">
			<div class="well well-sm">
				@using (Html.BeginForm("Edit", "Film", FormMethod.Post, new { role = "form", enctype = "multipart/form-data" }))
				{
					@Html.AntiForgeryToken()
					@Html.HiddenFor(m => m.Id)
					@Html.HiddenFor(m => m.ImagePath)
					@Html.ValidationSummary(true, "", new { @class = "text-danger" })

					<div class="row">
						<div class="col-md-2">
							<img src="@Model.ImagePath" class="img-responsive img-thumbnail" alt="No image" />
						</div>
						<div class="col-md-3">
							<div class="form-group">
								@Html.LabelFor(m => m.Title)
								@Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
								@Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
							</div>
							<div class="form-group">
								@Html.LabelFor(m => m.Duration)
								@Html.TextBoxFor(m => m.Duration, new { @class = "form-control" })
								@Html.ValidationMessageFor(m => m.Duration, "", new { @class = "text-danger" })
							</div>
							<div class="form-group">
								@Html.LabelFor(m => m.Image)
								@Html.TextBoxFor(m => m.Image, new { @class = "form-control", type = "file" })
								@Html.ValidationMessageFor(m => m.Image, "", new { @class = "text-danger" })
							</div>
						</div>
						<div class="col-md-7">
							<div class="form-group">
								@Html.LabelFor(m => m.Description)
								@Html.TextAreaFor(m => m.Description, new { @class = "form-control", rows = 9, cols = 25 })
								@Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
							</div>
						</div>
						<div class="col-md-12">
							<div class="pull-right">
								<button type="submit" class="btn btn-primary no-shadow">Save</button>
							</div>
						</div>
					</div>
				}
			</div>
		</div>
	</div>
</div>

<div id="SeanceManagement">
	@{ Html.RenderAction("Index", "Seance", routeValues: new { filmId = Model.Id }); }
</div>