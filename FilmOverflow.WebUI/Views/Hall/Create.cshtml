@model FilmOverflow.WebUI.ViewModels.HallViewModel

@{
	ViewBag.Title = "Create hall";
}

<h2 class="text-center">
	@ViewBag.Title
</h2>

<div class="well well-lg">
	@using (Html.BeginForm())
	{
		@Html.AntiForgeryToken()

		<div class="form-horizontal">
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			<div class="form-group">
				@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.RowAmount, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.RowAmount, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.RowAmount, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.ColumnAmount, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.ColumnAmount, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.ColumnAmount, "", new { @class = "text-danger" })
				</div>
			</div>
			@Html.HiddenFor(model => model.CinemaId, new { Value = ViewBag.CinemaId })
			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="Create" class="btn btn-default" />
				</div>
			</div>
		</div>
	}
</div>
<div>
	@Html.ActionLink(" ", "Index", null, new { @class = "fa fa-backward fa-2x", title = "Back to hall create" })
</div>

@section Scripts {
	@if (ViewBag.CinemaId != null)
	{
		@*<script src="~/Scripts/Halls/AttachCinemaToHall.js"></script>*@
	}
	@Scripts.Render("~/bundles/jqueryval")
}
